{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","id","good","App","useState","DEFAULT","sortFild","setSortFild","reverseFild","setReverseFild","visibleGoods","goods","preparedGoods","sort","good1","good2","SORT_ALPHABETICALLY","localeCompare","SORT_BY_LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,K,0CAAAA,E,gCAAAA,E,YAAAA,M,KAME,IAAMC,EAAkB,CAC7B,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,GAAIC,KAAM,WAuCX,IAAMC,EAAgB,WAC3B,MAAgCC,mBAASL,EAASM,SAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAEMC,EA9BR,SACEC,EADF,GAGW,IADPL,EACM,EADNA,SAAUE,EACJ,EADIA,YAENI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,cAAuC,IAA9BC,EAA6B,EAAnCZ,KAAuBa,EAAY,EAAlBb,KACrC,OAAQI,GACN,KAAKP,EAASiB,oBACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKhB,EAASmB,eACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAOcS,CACnBrB,EACA,CAAEM,WAAUE,gBAQd,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAaP,EAASiB,sBAEtCS,QAAS,kBAAMlB,EAAYR,EAASiB,sBAPtC,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAaP,EAASmB,iBAEtCO,QAAS,kBAAMlB,EAAYR,EAASmB,iBAPtC,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,kBAAMhB,GAAgBD,IAPjC,sBAYGF,GAAYE,IAEX,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAjDQ,WAClBlB,EAAYR,EAASM,SACrBI,GAAe,IA4CP,sBAYN,6BACE,6BACGC,EAAagB,KAAI,gBAAGxB,EAAH,EAAGA,KAAMD,EAAT,EAASA,GAAT,OAChB,oBAAI,UAAQ,OAAZ,SAA6BC,GAALD,cC/HpC0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fba933f6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nenum SortType {\n  SORT_ALPHABETICALLY = 'Sort alphabetically',\n  SORT_BY_LENGTH = 'Sort by length',\n  DEFAULT = '',\n}\n\nexport const goodsFromServer = [\n  { id: 1, good: 'Dumplings' },\n  { id: 2, good: 'Carrot' },\n  { id: 3, good: 'Eggs' },\n  { id: 4, good: 'Ice cream' },\n  { id: 5, good: 'Apple' },\n  { id: 6, good: 'Bread' },\n  { id: 7, good: 'Fish' },\n  { id: 8, good: 'Honey' },\n  { id: 9, good: 'Jam' },\n  { id: 10, good: 'Garlic' },\n];\n\ntype Good = {\n  id: number;\n  good: string;\n};\n\ntype Parametrs = {\n  sortFild: SortType;\n  reverseFild: boolean;\n};\n\nfunction getPreparedGoods(\n  goods: Good[],\n  { sortFild, reverseFild }: Parametrs,\n): Good[] {\n  const preparedGoods = [...goods];\n\n  if (sortFild) {\n    preparedGoods.sort(({ good: good1 }, { good: good2 }) => {\n      switch (sortFild) {\n        case SortType.SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        case SortType.SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseFild) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortFild, setSortFild] = useState(SortType.DEFAULT);\n  const [reverseFild, setReverseFild] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortFild, reverseFild },\n  );\n\n  const handleClick = () => {\n    setSortFild(SortType.DEFAULT);\n    setReverseFild(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortFild !== SortType.SORT_ALPHABETICALLY },\n          )}\n          onClick={() => setSortFild(SortType.SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortFild !== SortType.SORT_BY_LENGTH },\n          )}\n          onClick={() => setSortFild(SortType.SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !reverseFild },\n          )}\n          onClick={() => setReverseFild(!reverseFild)}\n        >\n          Reverse\n        </button>\n        {\n          (sortFild || reverseFild) && (\n\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleClick}\n            >\n              Reset\n            </button>\n          )\n        }\n\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(({ good, id }) => (\n            <li data-cy=\"Good\" key={id}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}